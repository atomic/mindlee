<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://dimplejs.org/dist/dimple.v2.0.0.min.js"></script>

<style>
    .axis path,
    .axis line {
        fill: none;
        stroke: black;
        shape-rendering: crispEdges;
    }

    .axis text {
        font-family: sans-serif;
        font-size: 11px;
    }

    .activity {
        font-size: 1em;
    }

</style>

<div class="container data-background">

    <div class="jumbotron">

        <svg id="visualisation" width="1000" height="500"></svg>
        {{#each hist}}
            <div class="container activity hvr-grow">
                <p>Title: {{ title }}</p>
                <p class="act_date">Date: {{date}}</p>
                <p class="act_time">Time: {{time}}</p>
                <p class="stress_level">Stress Level: {{stress_level}}</p>
                <p class="total_stress">Total stress: {{total_stress}}</p>
            </div>
        {{/each}}
        <script>
            function InitChart(hist) {

                // define the x scale
                var mindate = new Date(),
                        maxdate = new Date();
                mindate.setDate(mindate.getDate() - 3);

                var vis = d3.select("#visualisation"),
                        WIDTH = 400,
                        HEIGHT = 400,
                        MARGINS = {
                            top: 20,
                            right: 20,
                            bottom: 20,
                            left: 30
                        },

                        xScale = d3.time.scale().range([MARGINS.left, WIDTH - MARGINS.right]).domain([mindate, maxdate]),

                        yScale = d3.scale.linear().range([HEIGHT - MARGINS.top, MARGINS.bottom]).domain([0, 120]),

                        xAxis = d3.svg.axis()
                                .scale(xScale),

                        yAxis = d3.svg.axis()
                                .scale(yScale)
                                .orient("left");

                vis.append("svg:g")
                        .attr("class", "xaxis")
                        .attr("transform", "translate(0," + (HEIGHT - MARGINS.bottom) + ")")
                        .call(xAxis);

                vis.append("svg:g")
                        .attr("class", "yaxis")
                        .attr("transform", "translate(" + (MARGINS.left) + ",0)")
                        .call(yAxis);


                var line = d3.svg.line()
                        .x(function(d) {
                            return xScale(new Date(d.date_object));
                        })
                        .y(function(d) {
                            return yScale(d.total_stress);
                        })
                        .interpolate("linear");

                vis.append('svg:path')
                        .attr('d', line(hist))
                        .attr('stroke', 'blue')
                        .attr('stroke-width', 2)
                        .attr('fill', 'none');


                // now rotate text on x axis
                // solution based on idea here: https://groups.google.com/forum/?fromgroups#!topic/d3-js/heOBPQF3sAY
                // first move the text left so no longer centered on the tick
                // then rotate up to get 45 degrees.
                vis.selectAll(".xaxis text")  // select all the text elements for the xaxis
                        .attr("transform", function(d) {
                            return "translate(" + this.getBBox().height*-2 + "," + this.getBBox().height + ")rotate(-45)";
                        });
            }

            function getHistory() {
                console.log('checking history');
                $.get('/get_history', function (hist) {
                    console.log(hist);
                    InitChart(hist);
                });
            }

            getHistory();
        </script>
    </div>
</div>
